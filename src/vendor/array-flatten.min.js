/* From https://github.com/blakeembrey/array-flatten */
'use strict'
function flatten(array){if(!Array.isArray(array)){throw new TypeError('Expected value to be an array')}
return flattenFrom(array)}
function flattenFrom(array){return flattenDown(array,[])}
function flattenDepth(array,depth){if(!Array.isArray(array)){throw new TypeError('Expected value to be an array')}
return flattenFromDepth(array,depth)}
function flattenFromDepth(array,depth){if(typeof depth!=='number'){throw new TypeError('Expected the depth to be a number')}
return flattenDownDepth(array,[],depth)}
function flattenDown(array,result){for(var i=0;i<array.length;i++){var value=array[i]
if(Array.isArray(value)){flattenDown(value,result)}else{result.push(value)}}
return result}
function flattenDownDepth(array,result,depth){depth--
for(var i=0;i<array.length;i++){var value=array[i]
if(depth>-1&&Array.isArray(value)){flattenDownDepth(value,result,depth)}else{result.push(value)}}
return result}